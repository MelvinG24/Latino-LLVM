  Building Custom Rule C:/src/latino-llvm/unittests/Basic/CMakeLists.txt
  CMake does not need to re-run because C:\src\latino-llvm\msvc\unittests\Basic\CMakeFiles\generate.stamp is up-to-date.
  Microsoft (R) C/C++ Optimizing Compiler Version 19.00.24215.1 for x86
  Copyright (C) Microsoft Corporation.  All rights reserved.
  
  cl /c /I"C:\src\latino-llvm\msvc\unittests\Basic" /I"C:\src\latino-llvm\unittests\Basic" /I"C:\src\latino-llvm\include" /I"C:\src\latino-llvm\msvc\include" /IC:\bin\LLVM7\include /I"C:\bin\googletest-release-1.8-0\gtest\include" /I"C:\src\llvm-mirror\llvm\utils\unittest\googletest\include" /I"C:\src\llvm-mirror\llvm\utils\unittest\googlemock\include" /Zi /W3 /WX- /O2 /Ob1 /Oy- /D WIN32 /D _WINDOWS /D NDEBUG /D _LARGEFILE_SOURCE /D _FILE_OFFSET_BITS=64 /D _CRT_SECURE_NO_DEPRECATE /D _CRT_SECURE_NO_WARNINGS /D _CRT_NONSTDC_NO_DEPRECATE /D _CRT_NONSTDC_NO_WARNINGS /D _SCL_SECURE_NO_DEPRECATE /D _SCL_SECURE_NO_WARNINGS /D UNICODE /D _UNICODE /D __STDC_CONSTANT_MACROS /D __STDC_FORMAT_MACROS /D __STDC_LIMIT_MACROS /D _HAS_EXCEPTIONS=0 /D GTEST_HAS_RTTI=0 /D GTEST_LANG_CXX11=1 /D GTEST_HAS_TR1_TUPLE=0 /D "CMAKE_INTDIR=\"RelWithDebInfo\"" /D _UNICODE /D UNICODE /Gm- /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR- /Fo"BasicTests.dir\RelWithDebInfo\\" /Fd"BasicTests.dir\RelWithDebInfo\vc140.pdb" /Gd /TP /analyze- /errorReport:prompt  /EHs-c- "C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp"
cl : Command line warning D9025: overriding '/EHs' with '/EHs-'
cl : Command line warning D9025: overriding '/EHc' with '/EHc-'
  
  DiagnosticTest.cpp
C:\bin\LLVM7\include\llvm/Support/MathExtras.h(372): warning C4146: unary minus operator applied to unsigned type, result still unsigned
C:\bin\LLVM7\include\llvm/ADT/StringRef.h(886): warning C4141: 'inline': used more than once
C:\bin\LLVM7\include\llvm/ADT/StringRef.h(891): warning C4141: 'inline': used more than once
C:\bin\LLVM7\include\llvm/ADT/Hashing.h(572): warning C4244: 'argument': conversion from 'uint64_t' to 'std::size_t', possible loss of data
C:\bin\LLVM7\include\llvm/ADT/Hashing.h(584): warning C4244: 'argument': conversion from 'uint64_t' to 'std::size_t', possible loss of data
C:\bin\LLVM7\include\llvm/ADT/Hashing.h(623): warning C4244: 'argument': conversion from 'uint64_t' to 'std::size_t', possible loss of data
C:\bin\LLVM7\include\llvm/Support/Chrono.h(37): warning C4141: 'inline': used more than once
C:\bin\LLVM7\include\llvm/Support/Chrono.h(44): warning C4141: 'inline': used more than once
C:\bin\LLVM7\include\llvm/ADT/StringExtras.h(63): warning C4146: unary minus operator applied to unsigned type, result still unsigned
C:\bin\LLVM7\include\llvm/ADT/StringExtras.h(70): warning C4146: unary minus operator applied to unsigned type, result still unsigned
C:\src\latino-llvm\include\latino/Basic/DiagnosticOptions.h(98): warning C4005: 'ENUM_DIAGOPT': macro redefinition
  C:\src\latino-llvm\include\latino/Basic/DiagnosticOptions.h(71): note: see previous definition of 'ENUM_DIAGOPT'
C:\src\latino-llvm\include\latino/Basic/DiagnosticOptions.h(102): warning C4005: 'DIAGOPT': macro redefinition
  C:\src\latino-llvm\include\latino/Basic/DiagnosticOptions.h(70): note: see previous definition of 'DIAGOPT'
C:\src\latino-llvm\include\latino/Basic/DiagnosticOptions.h(103): warning C4005: 'ENUM_DIAGOPT': macro redefinition
  C:\src\latino-llvm\include\latino/Basic/DiagnosticOptions.h(98): note: see previous definition of 'ENUM_DIAGOPT'
C:\src\latino-llvm\include\latino/Basic/Diagnostic.h(910): error C2660: 'latino::DiagnosticIDs::ProcessDiag': function does not take 1 arguments
C:\src\latino-llvm\include\latino/Basic/PartialDiagnostic.h(364): error C2664: 'void latino::PartialDiagnostic::AddSourceRange(const latino::CharSourceRange &) const': cannot convert argument 1 from 'latino::SourceRange' to 'const latino::CharSourceRange &'
  C:\src\latino-llvm\include\latino/Basic/PartialDiagnostic.h(364): note: Reason: cannot convert from 'latino::SourceRange' to 'const latino::CharSourceRange'
  C:\src\latino-llvm\include\latino/Basic/PartialDiagnostic.h(364): note: No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(19): error C2556: 'const latino::PartialDiagnosticAt &latino::DiagnosticError::getDiagnostic(void)': overloaded function differs only by return type from 'latino::PartialDiagnosticAt &latino::DiagnosticError::getDiagnostic(void)'
  C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(18): note: see declaration of 'latino::DiagnosticError::getDiagnostic'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(19): error C2373: 'latino::DiagnosticError::getDiagnostic': redefinition; different type modifiers
  C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(18): note: see declaration of 'latino::DiagnosticError::getDiagnostic'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(19): error C2059: syntax error: 'return'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(19): error C2238: unexpected token(s) preceding ';'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(23): error C2259: 'latino::DiagnosticError': cannot instantiate abstract class
  C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(23): note: due to following members:
  C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(23): note: 'std::error_code llvm::ErrorInfoBase::convertToErrorCode(void) const': is abstract
  C:\bin\LLVM7\include\llvm/Support/Error.h(66): note: see declaration of 'llvm::ErrorInfoBase::convertToErrorCode'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(23): error C2888: 'llvm::Error': symbol cannot be defined within namespace 'latino'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(23): error C2512: 'latino::DiagnosticError': no appropriate default constructor available
  C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(12): note: see declaration of 'latino::DiagnosticError'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(23): error C2146: syntax error: missing ';' before identifier 'create'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(23): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(25): error C2672: 'llvm::make_error': no matching overloaded function found
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(25): error C2893: Failed to specialize function template 'llvm::Error llvm::make_error(ArgTs &&...)'
  C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(25): note: With the following template arguments:
  C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(25): note: 'ErrT=latino::DiagnosticError'
  C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(25): note: 'ArgTs={std::pair<latino::SourceLocation,latino::PartialDiagnostic>}'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(25): warning C4508: 'latino::create': function should return a value; 'void' return type assumed
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(26): error C2617: 'latino::create': inconsistent return statement
  C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(23): note: see declaration of 'latino::create'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(14): error C2614: 'latino::DiagnosticError': illegal member initialization: 'Diag' is not a base or member
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(31): error C2065: 'Err': undeclared identifier
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(31): error C2448: 'latino::take': function-style initializer appears to be a function definition
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(41): error C2059: syntax error: 'private'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(43): error C2270: 'convertToErrorCode': modifiers not allowed on nonmember functions
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(43): error C3158: 'latino::convertToErrorCode': 'override' can only be applied to a virtual member function
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(47): error C2512: 'std::pair<latino::SourceLocation,latino::PartialDiagnostic>::pair': no appropriate default constructor available
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(50): error C2059: syntax error: '}'
C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(50): error C2143: syntax error: missing ';' before '}'
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iostream(12): error C2143: syntax error: missing ';' before '{'
C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\iostream(12): error C2447: '{': missing function header (old-style formal list?)
C:\bin\googletest-release-1.8-0\gtest\include\gtest/internal/gtest-port.h(1261): error C2039: 'cerr': is not a member of 'std'
  C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\sstream(12): note: see declaration of 'std'
C:\bin\googletest-release-1.8-0\gtest\include\gtest/internal/gtest-port.h(1261): error C2065: 'cerr': undeclared identifier
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(20): error C2039: 'hasErrorOccurred': is not a member of 'latino::DiagnosticErrorTrap'
  C:\src\latino-llvm\include\latino/Basic/Diagnostic.h(939): note: see declaration of 'latino::DiagnosticErrorTrap'
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(20): error C2512: 'testing::AssertionResult': no appropriate default constructor available
  C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(20): note: No constructor could take the source type, or constructor overload resolution was ambiguous
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(23): error C2039: 'hasErrorOccurred': is not a member of 'latino::DiagnosticsEngine'
  C:\src\latino-llvm\include\latino/Basic/Diagnostic.h(131): note: see declaration of 'latino::DiagnosticsEngine'
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(23): error C2512: 'testing::AssertionResult': no appropriate default constructor available
  C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(23): note: No constructor could take the source type, or constructor overload resolution was ambiguous
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(34): warning C4800: 'unsigned int': forcing value to bool 'true' or 'false' (performance warning)
C:\bin\LLVM7\include\llvm/Support/Error.h(440): error C2061: syntax error: identifier 'Error'
  C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(51): note: see reference to class template instantiation 'llvm::Expected<std::pair<int,int>>' being compiled
C:\bin\LLVM7\include\llvm/Support/Error.h(537): error C3646: 'takeError': unknown override specifier
C:\bin\LLVM7\include\llvm/Support/Error.h(537): error C2059: syntax error: '('
C:\bin\LLVM7\include\llvm/Support/Error.h(537): error C2334: unexpected token(s) preceding '{'; skipping apparent function body
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(51): error C2039: 'create': is not a member of 'latino::DiagnosticError'
  C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(12): note: see declaration of 'latino::DiagnosticError'
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(54): error C2440: 'initializing': cannot convert from 'int' to 'llvm::Expected<std::pair<int,int>>'
  C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(54): note: No constructor could take the source type, or constructor overload resolution was ambiguous
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(56): error C2146: syntax error: missing ';' before identifier 'Err'
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(56): error C2065: 'Err': undeclared identifier
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(56): error C2039: 'takeError': is not a member of 'llvm::Expected<std::pair<int,int>>'
  C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(51): note: see declaration of 'llvm::Expected<std::pair<int,int>>'
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(57): error C2039: 'take': is not a member of 'latino::DiagnosticError'
  C:\src\latino-llvm\include\latino/Basic/DiagnosticError.h(12): note: see declaration of 'latino::DiagnosticError'
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(57): error C2065: 'Err': undeclared identifier
C:\src\latino-llvm\unittests\Basic\DiagnosticTest.cpp(58): error C2065: 'Err': undeclared identifier
