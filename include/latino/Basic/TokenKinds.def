#ifndef TOK
#define TOK(K)
#endif
#ifndef PUNCTUATOR
#define PUNCTUATOR(X, Y) TOK(X)
#endif
#ifndef LAT_KEYWORD
#define LAT_KEYWORD(X) TOK(kw_ ## X)
#endif

//===----------------------------------------------------------------------===//
// Language keywords.
//===----------------------------------------------------------------------===//

// These define members of the tok::* namespace.

TOK(unknown)             // Not a token.
TOK(eof)                 // End of file.
TOK(eod)                 // End of preprocessing directive (end of line inside a
                         // directive).
TOK(code_completion)     // Code completion marker

// Comments.
TOK(comment)             // Comment

// Identifiers.
TOK(identifier)          // abcde123
TOK(raw_identifier)      // Used only in raw lexing mode.

// Integer Constants
// Floating Constants
TOK(numeric_constant)    // 0x123

// Character Constants
TOK(char_constant)       // 'a'

// String Literals.
TOK(string_literal)      // "foo"

// Punctuators.
PUNCTUATOR(ampamp,              "&&")
//PUNCTUATOR(arrow,               "->")
//PUNCTUATOR(at,                  "@")
PUNCTUATOR(colon,               ":")
//PUNCTUATOR(coloncolon,          "::")
PUNCTUATOR(comma,               ",")
PUNCTUATOR(ellipsis,            "...")
PUNCTUATOR(equal,               "=")
PUNCTUATOR(equalequal,          "==")
PUNCTUATOR(exclaim,             "!")
PUNCTUATOR(exclaimequal,        "!=")
PUNCTUATOR(greater,             ">")
PUNCTUATOR(greaterequal,        ">=")
PUNCTUATOR(l_brace,             "{")
PUNCTUATOR(l_paren,             "(")
PUNCTUATOR(l_square,            "[")
PUNCTUATOR(less,                "<")
PUNCTUATOR(lessequal,           "<=")
PUNCTUATOR(minus,               "-")
PUNCTUATOR(minusequal,          "-=")
PUNCTUATOR(minusminus,          "--")
PUNCTUATOR(percent,             "%")
PUNCTUATOR(percentequal,        "%=")
PUNCTUATOR(period,              ".")
PUNCTUATOR(periodperiod,        "..")
PUNCTUATOR(pipepipe,            "||")
PUNCTUATOR(plus,                "+")
PUNCTUATOR(plusequal,           "+=")
PUNCTUATOR(plusplus,            "++")
PUNCTUATOR(question,            "?")
PUNCTUATOR(r_brace,             "}")
PUNCTUATOR(r_paren,             ")")
PUNCTUATOR(r_square,            "]")
PUNCTUATOR(semi,                ";")
PUNCTUATOR(slash,               "/")
PUNCTUATOR(slashequal,          "/=")
PUNCTUATOR(star,                "*")
PUNCTUATOR(starequal,           "*=")
PUNCTUATOR(tildeequal,          "~=")

// Keywords.  These turn into kw_* tokens.
LAT_KEYWORD(caso)
LAT_KEYWORD(constante)
LAT_KEYWORD(continuar)
LAT_KEYWORD(defecto)
LAT_KEYWORD(elegir)
LAT_KEYWORD(falso)
LAT_KEYWORD(global)
LAT_KEYWORD(hacer)
LAT_KEYWORD(mientras)
LAT_KEYWORD(nulo)
LAT_KEYWORD(osi)
LAT_KEYWORD(por)
LAT_KEYWORD(retornar)
LAT_KEYWORD(romper)
LAT_KEYWORD(si)
LAT_KEYWORD(sino)
LAT_KEYWORD(variable)
LAT_KEYWORD(verdadero)
